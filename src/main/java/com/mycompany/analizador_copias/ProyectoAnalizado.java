/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.analizador_copias;

import com.mycompany.Analizadores.Html.lexerHTML;
import com.mycompany.Analizadores.Html.parserHTML;
import com.mycompany.Analizadores.lexerJava;
import com.mycompany.Analizadores.parser;
import com.mycompany.Objetos.ErrorFinded;
import java.io.DataInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java_cup.runtime.Symbol;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class ProyectoAnalizado extends javax.swing.JFrame implements Runnable {

    private lexerHTML lexer;
    private parserHTML parser;
    NumeroLinea num;
    private ArrayList<ErrorFinded> reporteErrores = new ArrayList<ErrorFinded>();

    public ProyectoAnalizado() {
        initComponents();
        num = new NumeroLinea(txtArea);
        jScrollPane1.setRowHeaderView(num);
        setLocationRelativeTo(null);
        txtArea.setEnabled(false);

        Thread hilo = new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReporte = new javax.swing.JTextArea();
        btnReportesDef = new javax.swing.JButton();
        btnResultados = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        btnEjecutar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Consola");

        txtReporte.setColumns(20);
        txtReporte.setRows(5);
        jScrollPane2.setViewportView(txtReporte);

        btnReportesDef.setText("Reportes.def");
        btnReportesDef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesDefActionPerformed(evt);
            }
        });

        btnResultados.setText("Resultados (Json)");
        btnResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultadosActionPerformed(evt);
            }
        });

        btnReportes.setText("Reportes");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });

        btnEjecutar.setText("Ejecutar");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnReportesDef)
                                .addGap(18, 18, 18)
                                .addComponent(btnResultados)
                                .addGap(12, 12, 12)
                                .addComponent(btnReportes))
                            .addComponent(btnEjecutar))
                        .addGap(0, 277, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReportesDef)
                    .addComponent(btnResultados)
                    .addComponent(btnReportes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEjecutar)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed

        Reader reader = new StringReader(txtArea.getText());
        ArrayList<String> errores = new ArrayList<String>();
        lexer = new lexerHTML(reader);
        parser = new parserHTML(lexer);

        try {
            //sumasParser.parse();
            parser.parse();

            if (lexerHTML.ErroresLexicos.isEmpty() && parserHTML.ErroresSintacticos.isEmpty()) {

                JOptionPane.showMessageDialog(null, "COMPILADO CON EXITO", "ARCHIVO CONFIGURACION", JOptionPane.INFORMATION_MESSAGE);
            } else {
                for (String erroresEncontrados : errores) {
                    txtReporte.setText(txtReporte.getText() + erroresEncontrados);
                }
            }
            // counterALabel.setText("Cantidad total de sumas: " + sumasParser.getCount());
        } catch (Exception ex) {
            Symbol sym = parser.getS();
            txtReporte.setText("Error de sintaxis. Linea: " + (sym.left) + " Columna: " + (sym.right) + " Texto: \"" + sym.value + "\"");
        }


    }//GEN-LAST:event_btnEjecutarActionPerformed

    private void btnReportesDefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesDefActionPerformed
       txtArea.setEnabled(true);
    }//GEN-LAST:event_btnReportesDefActionPerformed

    private void btnResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultadosActionPerformed
        txtArea.setText("");
    }//GEN-LAST:event_btnResultadosActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        txtArea.setText("");
    }//GEN-LAST:event_btnReportesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProyectoAnalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProyectoAnalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProyectoAnalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProyectoAnalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        new ProyectoAnalizado().setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnReportesDef;
    private javax.swing.JButton btnResultados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextArea txtReporte;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            ServerSocket servidor = new ServerSocket(8888);

            while (true) {

                //acepta todo lo que viene del puerto seleccionado 
                Socket socket = servidor.accept();

                //flujo de entrada de datos 
                DataInputStream flujo_entrada = new DataInputStream(socket.getInputStream());
                //leer lo que viene del cliente
                String text = flujo_entrada.readUTF();

                txtArea.append("\n" + text);

                socket.close();
            }

        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

}
